// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.15.8
// source: collectpb/collect.proto

package collectpb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// CollecterServiceClient is the client API for CollecterService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type CollecterServiceClient interface {
	SavePosts(ctx context.Context, in *DownloadReq, opts ...grpc.CallOption) (*Empty, error)
}

type collecterServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCollecterServiceClient(cc grpc.ClientConnInterface) CollecterServiceClient {
	return &collecterServiceClient{cc}
}

func (c *collecterServiceClient) SavePosts(ctx context.Context, in *DownloadReq, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/collectpb.CollecterService/SavePosts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CollecterServiceServer is the server API for CollecterService service.
// All implementations must embed UnimplementedCollecterServiceServer
// for forward compatibility
type CollecterServiceServer interface {
	SavePosts(context.Context, *DownloadReq) (*Empty, error)
	mustEmbedUnimplementedCollecterServiceServer()
}

// UnimplementedCollecterServiceServer must be embedded to have forward compatible implementations.
type UnimplementedCollecterServiceServer struct {
}

func (UnimplementedCollecterServiceServer) SavePosts(context.Context, *DownloadReq) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SavePosts not implemented")
}
func (UnimplementedCollecterServiceServer) mustEmbedUnimplementedCollecterServiceServer() {}

// UnsafeCollecterServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to CollecterServiceServer will
// result in compilation errors.
type UnsafeCollecterServiceServer interface {
	mustEmbedUnimplementedCollecterServiceServer()
}

func RegisterCollecterServiceServer(s grpc.ServiceRegistrar, srv CollecterServiceServer) {
	s.RegisterService(&CollecterService_ServiceDesc, srv)
}

func _CollecterService_SavePosts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DownloadReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollecterServiceServer).SavePosts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/collectpb.CollecterService/SavePosts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollecterServiceServer).SavePosts(ctx, req.(*DownloadReq))
	}
	return interceptor(ctx, in, info, handler)
}

// CollecterService_ServiceDesc is the grpc.ServiceDesc for CollecterService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var CollecterService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "collectpb.CollecterService",
	HandlerType: (*CollecterServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SavePosts",
			Handler:    _CollecterService_SavePosts_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "collectpb/collect.proto",
}
